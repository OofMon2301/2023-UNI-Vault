{"assets":[{"title":"Main File for Game Development on Embedded Systems","id":"866d62f5-4a30-41ae-af3d-2da5ec1d8bc2","type":"CODE","raw":"/*\r\n * project.c\r\n *\r\n * Main file\r\n *\r\n * Authors: Peter Sutton, Luke Kamols, Jarrod Bennett, Cody Burnett\r\n * Modified by <YOUR NAME HERE>\r\n */\r\n\r\n#include <stdio.h>\r\n#include <stdint.h>\r\n#include <avr/io.h>\r\n#include <avr/interrupt.h>\r\n#include <avr/pgmspace.h>\r\n\r\n#define F_CPU 8000000UL\r\n#include <util/delay.h>\r\n\r\n#include \"game.h\"\r\n#include \"display.h\"\r\n#include \"ledmatrix.h\"\r\n#include \"buttons.h\"\r\n#include \"serialio.h\"\r\n#include \"terminalio.h\"\r\n#include \"timer0.h\"\r\n#include \"timer1.h\"\r\n#include \"timer2.h\"\r\n\r\n// Globals\r\n\r\n// Function prototypes - these are defined below (after main()) in the order\r\n// given here\r\nvoid initialise_hardware(void);\r\nvoid start_screen(void);\r\nvoid new_game(void);\r\nvoid play_game(void);\r\nvoid handle_game_over(void);\r\nvoid handle_firing(void);\r\nvoid cheating(void);\r\n\r\n/////////////////////////////// main //////////////////////////////////\r\nint main(void)\r\n{\r\n\t// Setup hardware and call backs. This will turn on\r\n\t// interrupts.\r\n\tinitialise_hardware();\r\n\r\n\t// Show the splash screen message. Returns when display\r\n\t// is complete.\r\n\tstart_screen();\r\n\r\n\t// Loop forever and continuously play the game.\r\n\twhile (1)\r\n\t{\r\n\t\tnew_game();\r\n\t\tplay_game();\r\n\t\thandle_game_over();\r\n\t}\r\n}\r\n\r\nvoid initialise_hardware(void)\r\n{\r\n\tledmatrix_setup();\r\n\tinit_button_interrupts();\r\n\t// Setup serial port for 19200 baud communication with no echo\r\n\t// of incoming characters\r\n\tinit_serial_stdio(19200, 0);\r\n\r\n\tinit_timer0();\r\n\tinit_timer1();\r\n\tinit_timer2();\r\n\r\n\t// Turn on global interrupts\r\n\tsei();\r\n}\r\n\r\nvoid start_screen(void)\r\n{\r\n\t// Clear terminal screen and output a message\r\n\tclear_terminal();\r\n\thide_cursor();\r\n\tset_display_attribute(FG_WHITE);\r\n\tmove_terminal_cursor(10, 4);\r\n\tprintf_P(PSTR(\" _______    ______  ________  ________  __        ________   ______   __    __  ______  _______  \"));\r\n\tmove_terminal_cursor(10, 5);\r\n\tprintf_P(PSTR(\"|       \\\\  /      \\\\|        \\\\|        \\\\|  \\\\      |        \\\\ /      \\\\ |  \\\\  |  \\\\|      \\\\|       \\\\ \"));\r\n\tmove_terminal_cursor(10, 6);\r\n\tprintf_P(PSTR(\"| $$$$$$$\\\\|  $$$$$$\\\\\\\\$$$$$$$$ \\\\$$$$$$$$| $$      | $$$$$$$$|  $$$$$$\\\\| $$  | $$ \\\\$$$$$$| $$$$$$$\\\\\"));\r\n\tmove_terminal_cursor(10, 7);\r\n\tprintf_P(PSTR(\"| $$__/ $$| $$__| $$  | $$      | $$   | $$      | $$__    | $$___\\\\$$| $$__| $$  | $$  | $$__/ $$\"));\r\n\tmove_terminal_cursor(10, 8);\r\n\tprintf_P(PSTR(\"| $$    $$| $$    $$  | $$      | $$   | $$      | $$  \\\\    \\\\$$    \\\\ | $$    $$  | $$  | $$    $$\"));\r\n\tmove_terminal_cursor(10, 9);\r\n\tprintf_P(PSTR(\"| $$$$$$$\\\\| $$$$$$$$  | $$      | $$   | $$      | $$$$$    _\\\\$$$$$$\\\\| $$$$$$$$  | $$  | $$$$$$$ \"));\r\n\tmove_terminal_cursor(10, 10);\r\n\tprintf_P(PSTR(\"| $$__/ $$| $$  | $$  | $$      | $$   | $$_____ | $$_____ |  \\\\__| $$| $$  | $$ _| $$_ | $$      \"));\r\n\tmove_terminal_cursor(10, 11);\r\n\tprintf_P(PSTR(\"| $$    $$| $$  | $$  | $$      | $$   | $$     \\\\| $$     \\\\ \\\\$$    $$| $$  | $$|   $$ \\\\| $$      \"));\r\n\tmove_terminal_cursor(10, 12);\r\n\tprintf_P(PSTR(\" \\\\$$$$$$$  \\\\$$   \\\\$$   \\\\$$       \\\\$$    \\\\$$$$$$$$ \\\\$$$$$$$$  \\\\$$$$$$  \\\\$$   \\\\$$ \\\\$$$$$$ \\\\$$      \"));\r\n\tmove_terminal_cursor(10, 14);\r\n\t// Printing name and student number\r\n\tprintf_P(PSTR(\"CSSE2010/7201 Project by Jamie Chen - 48093189\"));\r\n\tprintf_P(PSTR(\" \\n\"));\r\n\tprintf_P(PSTR(\"⠀⠀⠘⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀\\n\"));\r\n\tprintf_P(PSTR(\"⠀⠀⠀⠑⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀\\n\"));\r\n\tprintf_P(PSTR(\"⠀⠀⠀⠀⠈⠢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠴⠊⠀⠀⠀⠀⠀\\n\"));\r\n\tprintf_P(PSTR(\"⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢀⣀⣀⣀⣀⣀⡀⠤⠄⠒⠈⠀⠀⠀⠀⠀⠀⠀⠀\\n\"));\r\n\tprintf_P(PSTR(\"⠀⠀⠀⠀⠀⠀⠀⠘⣀⠄⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\"));\r\n\tprintf_P(PSTR(\" \\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠛⠛⠋⠉⠈⠉⠉⠉⠉⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⡏⣀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⢏⣴⣿⣷⠀⠀⠀⠀⠀⢾⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣟⣾⣿⡟⠁⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣷⢢⠀⠀⠀⠀⠀⠀⠀⢸⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣟⠀⡴⠄⠀⠀⠀⠀⠀⠀⠙⠻⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⠟⠻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠶⢴⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣁⡀⠀⠀⢰⢠⣦⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⡄⠀⣴⣶⣿⡄⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⡋⠀⠀⠀⠎⢸⣿⡆⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⠗⢘⣿⣟⠛⠿⣼\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⠋⢀⡌⢰⣿⡿⢿⡀⠀⠀⠀⠀⠀⠙⠿⣿⣿⣿⣿⣿⡇⠀⢸⣿⣿⣧⢀⣼\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣷⢻⠄⠘⠛⠋⠛⠃⠀⠀⠀⠀⠀⢿⣧⠈⠉⠙⠛⠋⠀⠀⠀⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣧⠀⠈⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠀⠀⠀⠀⢀⢃⠀⠀⢸⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⡿⠀⠴⢗⣠⣤⣴⡶⠶⠖⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡸⠀⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⡀⢠⣾⣿⠏⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠉⠀⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣧⠈⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⡄⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣾⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣿⣦⣄⣀⣀⣀⣀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠙⣿⣿⡟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠁⠀⠀⠹⣿⠃⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⢐⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\"));\r\n\tprintf_P(PSTR(\"⣿⣿⣿⣿⠿⠛⠉⠉⠁⠀⢻⣿⡇⠀⠀⠀⠀⠀⠀⢀⠈⣿⣿⡿⠉⠛⠛⠛⠉⠉\\n\"));\r\n\tprintf_P(PSTR(\"⣿⡿⠋⠁⠀⠀⢀⣀⣠⡴⣸⣿⣇⡄⠀⠀⠀⠀⢀⡿⠄⠙⠛⠀⣀⣠⣤⣤⠄\\n\"));\r\n\t// Output the static start screen and wait for a push button\r\n\t// to be pushed or a serial input of 's'\r\n\tshow_start_screen();\r\n\r\n\tuint32_t last_screen_update, current_time;\r\n\tlast_screen_update = get_current_time();\r\n\r\n\tint8_t frame_number = -2 * ANIMATION_DELAY;\r\n\r\n\t// Wait until a button is pressed, or 's' is pressed on the terminal\r\n\twhile (1)\r\n\t{\r\n\t\t// First check for if a 's' is pressed\r\n\t\t// There are two steps to this\r\n\t\t// 1) collect any serial input (if available)\r\n\t\t// 2) check if the input is equal to the character 's'\r\n\t\tchar serial_input = -1;\r\n\t\tif (serial_input_available())\r\n\t\t{\r\n\t\t\tserial_input = fgetc(stdin);\r\n\t\t}\r\n\t\t// If the serial input is 's', then exit the start screen\r\n\t\tif (serial_input == 's' || serial_input == 'S')\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t// Next check for any button presses\r\n\t\tint8_t btn = button_pushed();\r\n\t\tif (btn != NO_BUTTON_PUSHED)\r\n\t\t{\r\n\t\t\t// Check whether it is button 0\r\n\t\t\tif (btn == BUTTON0_PUSHED)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// every 200 ms, update the animation\r\n\t\tcurrent_time = get_current_time();\r\n\t\tif (current_time - last_screen_update > 200)\r\n\t\t{\r\n\t\t\tupdate_start_screen(frame_number);\r\n\t\t\tframe_number++;\r\n\t\t\tif (frame_number > ANIMATION_LENGTH)\r\n\t\t\t{\r\n\t\t\t\tframe_number -= ANIMATION_LENGTH + ANIMATION_DELAY;\r\n\t\t\t}\r\n\t\t\tlast_screen_update = current_time;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid new_game(void)\r\n{\r\n\t// Clear the serial terminal\r\n\tclear_terminal();\r\n\r\n\t// Initialise the game and display\r\n\tinitialise_game();\r\n\r\n\t// Clear a button push or serial input if any are waiting\r\n\t// (The cast to void means the return value is ignored.)\r\n\t(void)button_pushed();\r\n\tclear_serial_input_buffer();\r\n}\r\n\r\nvoid play_game(void)\r\n{\r\n\tuint32_t last_flash_time, current_time;\r\n\tint8_t btn; // The button pushed\r\n\r\n\tlast_flash_time = get_current_time();\r\n\r\n\t// We play the game until it's over\r\n\twhile (!is_game_over())\r\n\t{\r\n\t\t// We need to check if any button has been pushed, this will be\r\n\t\t// NO_BUTTON_PUSHED if no button has been pushed\r\n\t\t// Checkout the function comment in buttons.h and the implementation\r\n\t\t// in buttons.c.\r\n\t\tbtn = button_pushed();\r\n\r\n\t\t// Terminal inputs (wasd/WASD)\r\n\t\tchar serial_input = -1;\r\n\t\tif (serial_input_available())\r\n\t\t{\r\n\t\t\tserial_input = fgetc(stdin);\r\n\t\t}\r\n\r\n\t\t// Consolidating movement logic for both button and serial inputs\r\n\t\tint move_x = 0, move_y = 0;\r\n\t\tswitch (btn)\r\n\t\t{\r\n\t\tcase BUTTON0_PUSHED:\r\n\t\t\tmove_x = 1;\r\n\t\t\tbreak; // Move right\r\n\t\tcase BUTTON1_PUSHED:\r\n\t\t\tmove_y = -1;\r\n\t\t\tbreak; // Move up\r\n\t\tcase BUTTON2_PUSHED:\r\n\t\t\tmove_y = 1;\r\n\t\t\tbreak; // Move down\r\n\t\tcase BUTTON3_PUSHED:\r\n\t\t\tmove_x = -1;\r\n\t\t\tbreak; // Move left\r\n\t\t}\r\n\r\n\t\tswitch (serial_input)\r\n\t\t{\r\n\t\tcase 'w':\r\n\t\tcase 'W':\r\n\t\t\tmove_y = 1;\r\n\t\t\tbreak; // Move up\r\n\t\tcase 'a':\r\n\t\tcase 'A':\r\n\t\t\tmove_x = -1;\r\n\t\t\tbreak; // Move left\r\n\t\tcase 's':\r\n\t\tcase 'S':\r\n\t\t\tmove_y = -1;\r\n\t\t\tbreak; // Move down\r\n\t\tcase 'd':\r\n\t\tcase 'D':\r\n\t\t\tmove_x = 1;\r\n\t\t\tbreak; // Move right\r\n\t\tcase 'f':\r\n\t\tcase 'F':\r\n\t\t\t// New: Handle firing\r\n\t\t\thandle_firing();\r\n\t\t\tbreak;\r\n\t\tcase 'c':\r\n\t\tcase 'C':\r\n\t\t\t// Cheating\r\n\t\t\tcheating();\r\n\t\t\tbreak;\r\n\t\tcase '1':\r\n\t\t\t// Segment timer 1\r\n\t\t\tbreak;\r\n\t\tcase '2':\r\n\t\t\t// Segment timer 2\r\n\t\t\tbreak;\r\n\t\tcase '3':\r\n\t\t\t// Segment timer 3\r\n\t\t\tbreak;\r\n\t\tcase '4':\r\n\t\t\t// Segment timer 4\r\n\t\t\tbreak;\r\n\t\tcase '5':\r\n\t\t\t// Segment timer 5\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (move_x != 0 || move_y != 0)\r\n\t\t{\r\n\t\t\tmove_cursor(move_x, move_y);\r\n\t\t\t// see move_cursor(...) in game.c\r\n\t\t\t// Reset flashing time\r\n\t\t\tlast_flash_time = current_time;\r\n\t\t}\r\n\r\n\t\tcurrent_time = get_current_time();\r\n\t\tif (current_time >= last_flash_time + 200)\r\n\t\t{\r\n\t\t\t// 200ms (0.2 second) has passed since the last time we advance the\r\n\t\t\t// notes here, so update the advance the notes\r\n\t\t\tflash_cursor();\r\n\r\n\t\t\t// Update the most recent time the notes were advance\r\n\t\t\tlast_flash_time = current_time;\r\n\t\t}\r\n\t}\r\n\t// We get here if the game is over.\r\n}\r\n\r\nvoid handle_game_over()\r\n{\r\n\tmove_terminal_cursor(10, 14);\r\n\tprintf_P(PSTR(\"GAME OVER\"));\r\n\tmove_terminal_cursor(10, 15);\r\n\tprintf_P(PSTR(\"Press a button or 's'/'S' to start a new game\"));\r\n\r\n\t// Do nothing until a button is pushed. Hint: 's'/'S' should also start a\r\n\t// new game\r\n\twhile (button_pushed() == NO_BUTTON_PUSHED)\r\n\t{\r\n\t\t; // wait\r\n\t}\r\n\r\n\t// NOT YET IMPLEMENTED\r\n\r\n\t// move_terminal_cursor(10, 14);\r\n\t// printf(\"GAME OVER\");\r\n\r\n\t// // Colour locations which have not been fired upon\r\n\t// for (uint8_t y = 0; y < GRID_NUM_ROWS; y++)\r\n\t// {\r\n\t// \tfor (uint8_t x = 0; x < GRID_NUM_COLUMNS; x++)\r\n\t// \t{\r\n\t// \t\tif (computer_grid_hits[y][x] == 0)\r\n\t// \t\t{\r\n\t// \t\t\tledmatrix_draw_pixel_in_computer_grid(x, y, COLOUR_GREEN);\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\t// // Colour Locations which have been hit\r\n\t// for (uint8_t y = 0; y < GRID_NUM_ROWS; y++)\r\n\t// {\r\n\t// \tfor (uint8_t x = 0; x < GRID_NUM_COLUMNS; x++)\r\n\t// \t{\r\n\t// \t\tif (computer_grid_hits[y][x] == 1)\r\n\t// \t\t{\r\n\t// \t\t\tledmatrix_draw_pixel_in_computer_grid(x, y, COLOUR_ORANGE);\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\t// // Turn off cursor and flashing cursor\r\n\t// cursor_on = 0;\r\n\t// flash_cursor();\r\n}\r\n","language":"c","time":"2 months ago","created":"2024-05-21T04:42:20.922Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"85f3c592-82cb-46fd-9cfe-c44007a932bb","created":{"value":"2024-05-21T04:42:22.332Z","readable":"2 months ago"},"updated":{"value":"2024-05-21T04:42:22.332Z","readable":"2 months ago"},"mechanism":"AUTOMATIC","asset":{"id":"866d62f5-4a30-41ae-af3d-2da5ec1d8bc2"},"type":"DESCRIPTION","text":"This code snippet is a program that initializes the hardware, start screen, play game, and handle firing. It also includes functions to initialize their boards with interrupts for Peter Sutton, Luke Kamols, Jarrod Bennett","model":{"id":"581bb95c-a270-412c-ab92-e1a2ee09e812"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"97410ada-79b9-42a7-b987-b0901fa7ebfe","created":{"value":"2024-05-21T04:42:34.025Z","readable":"2 months ago"},"updated":{"value":"2024-05-21T04:42:34.025Z","readable":"2 months ago"},"mechanism":"AUTOMATIC","asset":{"id":"866d62f5-4a30-41ae-af3d-2da5ec1d8bc2"},"type":"DESCRIPTION","text":"Main file for a game development project on embedded systems using C programming language. Includes hardware initialization, game setup, gameplay logic, and game over handling.","model":{"id":"581bb95c-a270-412c-ab92-e1a2ee09e812"}}],"updated":"2024-05-21T04:42:34.093Z"},{"title":"Game State and Features Functionality","id":"24678390-bc3d-4909-9340-27588fd3714b","type":"CODE","raw":"/*\r\n * game.c\r\n *\r\n * Functionality related to the game state and features.\r\n *\r\n * Author: Jarrod Bennett, Cody Burnett\r\n */\r\n\r\n#include \"game.h\"\r\n#include <stdlib.h>\r\n#include <stdio.h>\r\n#include <stdint.h>\r\n#include \"display.h\"\r\n#include \"ledmatrix.h\"\r\n#include \"terminalio.h\"\r\n\r\nuint8_t human_grid[GRID_NUM_ROWS][GRID_NUM_COLUMNS];\r\nuint8_t computer_grid[GRID_NUM_ROWS][GRID_NUM_COLUMNS];\r\nuint8_t cursor_x, cursor_y;\r\nuint8_t cursor_on;\r\n\r\n// Initialise the game by resetting the grid and beat\r\nvoid initialise_game(void)\r\n{\r\n\t// clear the splash screen art\r\n\tledmatrix_clear();\r\n\r\n\t// see \"Human Turn\" feature for how ships are encoded\r\n\t// fill in the grid with the ships\r\n\tuint8_t initial_computer_grid[GRID_NUM_ROWS][GRID_NUM_COLUMNS] =\r\n\t\t{{SEA, SEA, SEA, SEA, SEA, SEA, SEA, SEA},\r\n\t\t {SEA, CARRIER | HORIZONTAL | SHIP_END, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL | SHIP_END, SEA},\r\n\t\t {SEA, SEA, SEA, SEA, SEA, SEA, SEA, SEA},\r\n\t\t {SEA, SEA, CORVETTE | SHIP_END, SEA, SEA, SUBMARINE | SHIP_END, SEA, SEA},\r\n\t\t {DESTROYER | SHIP_END, SEA, CORVETTE | SHIP_END, SEA, SEA, SUBMARINE | SHIP_END, SEA, FRIGATE | SHIP_END},\r\n\t\t {DESTROYER, SEA, SEA, SEA, SEA, SEA, SEA, FRIGATE},\r\n\t\t {DESTROYER | SHIP_END, SEA, CRUISER | HORIZONTAL | SHIP_END, CRUISER | HORIZONTAL, CRUISER | HORIZONTAL, CRUISER | HORIZONTAL | SHIP_END, SEA, FRIGATE | SHIP_END},\r\n\t\t {SEA, SEA, SEA, SEA, SEA, SEA, SEA, SEA}};\r\n\tuint8_t initial_human_grid[GRID_NUM_ROWS][GRID_NUM_COLUMNS] =\r\n\t\t{{SEA, SEA, SEA, SEA, SEA, SEA, SEA, SEA},\r\n\t\t {DESTROYER | SHIP_END, SEA, CRUISER | HORIZONTAL | SHIP_END, CRUISER | HORIZONTAL, CRUISER | HORIZONTAL, CRUISER | HORIZONTAL | SHIP_END, SEA, FRIGATE | SHIP_END},\r\n\t\t {DESTROYER, SEA, SEA, SEA, SEA, SEA, SEA, FRIGATE},\r\n\t\t {DESTROYER | SHIP_END, SEA, CORVETTE | SHIP_END, SEA, SEA, SUBMARINE | SHIP_END, SEA, FRIGATE | SHIP_END},\r\n\t\t {SEA, SEA, CORVETTE | SHIP_END, SEA, SEA, SUBMARINE | SHIP_END, SEA, SEA},\r\n\t\t {SEA, SEA, SEA, SEA, SEA, SEA, SEA, SEA},\r\n\t\t {SEA, CARRIER | HORIZONTAL | SHIP_END, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL, CARRIER | HORIZONTAL | SHIP_END, SEA},\r\n\t\t {SEA, SEA, SEA, SEA, SEA, SEA, SEA, SEA}};\r\n\tfor (uint8_t i = 0; i < GRID_NUM_COLUMNS; i++)\r\n\t{\r\n\t\tfor (uint8_t j = 0; j < GRID_NUM_COLUMNS; j++)\r\n\t\t{\r\n\t\t\thuman_grid[j][i] = initial_human_grid[j][i];\r\n\t\t\tcomputer_grid[j][i] = initial_computer_grid[j][i];\r\n\t\t\tif (human_grid[j][i] & SHIP_MASK)\r\n\t\t\t{\r\n\t\t\t\tledmatrix_draw_pixel_in_human_grid(i, j, COLOUR_ORANGE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcursor_x = 3;\r\n\tcursor_y = 3;\r\n\tcursor_on = 1;\r\n}\r\n\r\nvoid flash_cursor(void)\r\n{\r\n\t// Check if cursor is on miss/hit location\r\n\t// If so, display red or green\r\n\t// If not, display yellow\r\n\tcursor_on = 1 - cursor_on;\r\n\tif (cursor_on)\r\n\t{\r\n\t\tledmatrix_draw_pixel_in_computer_grid(cursor_x, cursor_y, COLOUR_YELLOW);\r\n\t}\r\n\telse if (0) // test for hit ship here, then duplicate and modify to test for sunken ship\r\n\t{\r\n\t\tledmatrix_draw_pixel_in_computer_grid(cursor_x, cursor_y, COLOUR_RED);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tledmatrix_draw_pixel_in_computer_grid(cursor_x, cursor_y, COLOUR_BLACK);\r\n\t}\r\n}\r\n\r\n// moves the position of the cursor by (dx, dy) such that if the cursor\r\n// started at (cursor_x, cursor_y) then after this function is called,\r\n// it should end at ( (cursor_x + dx) % WIDTH, (cursor_y + dy) % HEIGHT)\r\n// the cursor should be displayed after it is moved as well\r\nvoid move_cursor(int8_t dx, int8_t dy)\r\n{\r\n\t// YOUR CODE HERE\r\n\t/*suggestions for implementation:\r\n\t * 1: remove the display of the cursor at the current location\r\n\t *\t\t(and replace it with whatever piece is at that location)\r\n\t * 2: update the positional knowledge of the cursor, this will include\r\n\t *\t\tvariables cursor_x, cursor_y and cursor_visible. Make sure you\r\n\t *\t\tconsider what should happen if the cursor moves off the board.\r\n\t * 3: display the cursor at the new location\r\n\t * 4: reset the cursor flashing cycle. See project.c for how the cursor\r\n\t *\t\tis flashed.\r\n\t */\r\n\t// Remove cursor display of current location\r\n\tcursor_on = 0;\r\n\t// Replace with whatever the original piece was (if hit, display red, if nothing, display black, if miss, display green\r\n\tledmatrix_draw_pixel_in_computer_grid(cursor_x, cursor_y, COLOUR_BLACK);\r\n\t// Update cursor position after B0,B1,B2, or B3 is pressed, ensuring wrapping\r\n\tcursor_x = (cursor_x + dx + GRID_NUM_COLUMNS) % GRID_NUM_COLUMNS;\r\n\tcursor_y = (cursor_y + dy + GRID_NUM_ROWS) % GRID_NUM_ROWS;\r\n\t// Display cursor at new location\r\n\tledmatrix_draw_pixel_in_computer_grid(cursor_x, cursor_y, COLOUR_YELLOW);\r\n}\r\n\r\n// Returns 1 if the game is over, 0 otherwise.\r\nuint8_t is_game_over(void)\r\n{\r\n\t// YOUR CODE HERE\r\n\t// Detect if the game is over i.e. if a player has won.\r\n\treturn 0;\r\n}\r\n\r\nvoid check_for_hit(void)\r\n{\r\n\t// Check for bits. The three least significant bits determine what is in that location, with 000 being no ship, and 001 through 110 enumerating the ship types. The next bit is 1 if the location contains the end of a ship. Then the next bit is 1 if the ship is horizontal, or 0 if the ship is vertical.\r\n\t// Check for a hit in the computer grid and display the result with the appropriate colour.\r\n\t// Check if the location contains a ship. If so, display red. If not, display green.\r\n\r\n\t// Hit (Carrier, Cruiser, Destroyer, Frigate, Corvette, Submarine, and Ship Mask)\r\n\tif (computer_grid[cursor_y][cursor_x] & SHIP_MASK)\r\n\t{\r\n\r\n\t\t// Light up location red and keep it there\r\n\t\tledmatrix_draw_pixel_in_computer_grid(cursor_x, cursor_y, COLOUR_RED);\r\n\t}\r\n\t// Miss (Sea)\r\n\telse\r\n\t{\r\n\t\tledmatrix_draw_pixel_in_computer_grid(cursor_x, cursor_y, COLOUR_GREEN);\r\n\t}\r\n}","language":"c","time":"3 months ago","created":"2024-05-14T03:48:30.058Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"30817e1e-9b9f-4fc8-9d7e-40f4105bde58","created":{"value":"2024-05-14T03:48:31.169Z","readable":"3 months ago"},"updated":{"value":"2024-05-14T03:48:31.169Z","readable":"3 months ago"},"mechanism":"AUTOMATIC","asset":{"id":"24678390-bc3d-4909-9340-27588fd3714b"},"type":"DESCRIPTION","text":"This code snippet initializes a game by resetting the splash screen art, filling it with ships in an array. It also sets up some variables for each column and stores them in two arrays: \"human_grid\" and \"computer_grid\". The","model":{"id":"581bb95c-a270-412c-ab92-e1a2ee09e812"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"d4d28199-3f12-4cbf-8cfa-c25f9991084f","created":{"value":"2024-05-14T03:48:51.839Z","readable":"3 months ago"},"updated":{"value":"2024-05-14T03:48:51.839Z","readable":"3 months ago"},"mechanism":"AUTOMATIC","asset":{"id":"24678390-bc3d-4909-9340-27588fd3714b"},"type":"DESCRIPTION","text":"Functionality related to the game state, grid manipulation, and cursor movement in a game.","model":{"id":"581bb95c-a270-412c-ab92-e1a2ee09e812"}}],"updated":"2024-05-21T04:42:21.047Z","share":"https://61e80399-bb56-4b84-9a7a-135812865ff6.pieces.cloud/?p=47014f8e39"},{"title":"PNG Image with Text","id":"c1d5c425-ca46-450b-be00-4505401b5429","type":"IMAGE","raw":"","language":"text","time":"3 months ago","created":"2024-04-30T12:58:16.951Z","annotations":[],"updated":"2024-04-30T12:58:23.339Z"},{"title":"Async","id":"45f2c29b-ba5d-4622-92ae-38be2cbf543d","type":"CODE","raw":"const fetchData = async (): Promise<void> => {\n  // ... \n};","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.856Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"8b826a11-8cc6-47a3-b6ff-3a78cf2b640a","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"45f2c29b-ba5d-4622-92ae-38be2cbf543d"},"type":"DESCRIPTION","text":"Create a promise using typescript with a `void` return value. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.856Z"},{"title":"Array to Object","id":"af0bdd40-a01f-4326-aabf-5e68cc5e2aa7","type":"CODE","raw":"const arrayToObj = <T extends { id: number }>(array: T[]): { [k: string]: T } => {\n  const out: { [k: string]: T } = {};\n  array.forEach((val) => {\n    out[val.id] = val;\n  });\n  return out;\n};","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.856Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"bd8c75b6-9d9f-40f9-bf95-00af4fda7c2b","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"af0bdd40-a01f-4326-aabf-5e68cc5e2aa7"},"type":"DESCRIPTION","text":"Turns an Array into an Object. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.856Z"},{"title":"Intersection","id":"c0cb48c2-2711-4b31-ba07-c609cb4430cf","type":"CODE","raw":"const intersection = (a: any[], b: any[]) => {\",\n  const s = new Set(b);\n\treturn [...new Set(a)].filter((x) => s.has(x));\n};","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.856Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"0d1825ea-0f9e-4568-9b35-8e6acd2c6de9","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"c0cb48c2-2711-4b31-ba07-c609cb4430cf"},"type":"DESCRIPTION","text":"Returns a list of elements that exist in both arrays. From The Pieces TypeScript Collection.\n\n💡 Smart Description: This code relates to typescript, pieces typescript collection and Intersection"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"fe85eb75-66fb-43ae-92c7-848d419169a1","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"c0cb48c2-2711-4b31-ba07-c609cb4430cf"},"type":"DESCRIPTION","text":"This code relates to typescript, pieces typescript collection and Intersection"}],"updated":"2024-04-28T22:18:40.856Z"},{"title":"Is empty","id":"c8754864-e946-4bd1-850d-f323f280c330","type":"CODE","raw":"const isEmpty = (val: any) => val == null || !(Object.keys(val) || val.length;","language":"ts","time":"44 minutes ago","created":"2024-04-28T22:18:40.856Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3652b4aa-dd1b-43f4-b452-52cb823d2832","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"c8754864-e946-4bd1-850d-f323f280c330"},"type":"DESCRIPTION","text":"Checks if a value is an empty object, array, or null. From The Pieces TypeScript Collection.\n\n💡 Smart Description: This code relates to typescript, is empty and pieces typescript collection\n@returns {boolean}"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4cf29d14-ebd7-44d0-a406-052cc058220d","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"AUTOMATIC","asset":{"id":"c8754864-e946-4bd1-850d-f323f280c330"},"type":"DESCRIPTION","text":"This code relates to typescript, is empty and pieces typescript collection\n@returns {boolean}"}],"updated":"2024-04-28T22:18:40.856Z"},{"title":"Find key","id":"63262218-dbd9-42e8-8e4c-90ef47ec0b5c","type":"CODE","raw":"const findKey = (obj: any, fn: Function) => Object.keys(obj).find((key) => fn(obj[key], key, obj));","language":"ts","time":"44 minutes ago","created":"2024-04-28T22:18:40.856Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"1937c700-7096-461c-af7b-2a9dd722c1e4","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"AUTOMATIC","asset":{"id":"63262218-dbd9-42e8-8e4c-90ef47ec0b5c"},"type":"DESCRIPTION","text":"This code relates to pieces typescript collection, find key and typescript fn"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3aea288a-811b-496b-be26-7e041a085437","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"63262218-dbd9-42e8-8e4c-90ef47ec0b5c"},"type":"DESCRIPTION","text":"Returns the first key that meets a condition specified from passed function. From The Pieces TypeScript Collection.\n\n💡 Smart Description: This code relates to pieces typescript collection, find key and typescript fn"}],"updated":"2024-04-28T22:18:40.856Z"},{"title":"Function composition","id":"6cd78911-6c32-4248-82c2-9c3746246ffb","type":"CODE","raw":"const compose = (...fns: Func[]) => {\n\tfns.reduce((f, g) => (...args: any[]) => f(...castArray(g(...args))));\n}","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.855Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"a4a3616c-846c-45cb-a212-2cc14f55eafe","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"6cd78911-6c32-4248-82c2-9c3746246ffb"},"type":"DESCRIPTION","text":"Performs left to right function composition. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.855Z"},{"title":"Deep Clone","id":"6d40d80b-6344-472d-9ac3-b843e72b447f","type":"CODE","raw":"const deepClone = (obj: any) => {\n\tif (obj === null) return null;\n  let clone = { ...obj };\n\n  Object.keys(clone).forEach(\n\t  (key) =>\n      (clone[key] = typeof obj[key] === \"object\" ? deepClone(obj[key]) : obj[key])\n   );\n\t return Array.isArray(obj) && obj.length\n\t   ? (clone.length = obj.length) && Array.from(clone)\n\t   : Array.isArray(obj)\n     ? Array.from(obj)\n     : clone;\n};","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.855Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"2f7e6645-d5e9-4227-a1c0-6471127827da","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"6d40d80b-6344-472d-9ac3-b843e72b447f"},"type":"DESCRIPTION","text":"Returns a deep clone of the given object.\n@param {any} obj - Object to be cloned, or null if none is provided"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4a5c7c51-d745-4dd5-a364-8f68f167e287","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"6d40d80b-6344-472d-9ac3-b843e72b447f"},"type":"DESCRIPTION","text":"Creates a deep clone of an object. From The Pieces TypeScript Collection.\n\n💡 Smart Description: Returns a deep clone of the given object.\n@param {any} obj - Object to be cloned, or null if none is provided"}],"updated":"2024-04-28T22:18:40.855Z"},{"title":"Delay async executions","id":"9fd08507-a117-45c7-85ac-7b21521e46fb","type":"CODE","raw":"const timeoutPromise: (duration: number) => Promise<void> = (duration: number): Promise<void> => new Promise(resolver => setTimeout(resolver, duration));","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.855Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7c361a98-0a87-48cc-b645-9aa47eb6f407","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"9fd08507-a117-45c7-85ac-7b21521e46fb"},"type":"DESCRIPTION","text":"Turns setTimeout into a promise that can be used asynchronously. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.860Z"},{"title":"Debounce","id":"320ba791-2109-4551-8d6e-a1e83b925aea","type":"CODE","raw":"const debounce = (fn: Function, ms = 300) => {\n\tlet timeoutId: ReturnType<typeof setTimeout>;\n  return function (this: any, ...args: any[]) {\n\t  clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.855Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4daa5fde-3a87-4184-9586-fcb7a0592296","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"320ba791-2109-4551-8d6e-a1e83b925aea"},"type":"DESCRIPTION","text":"The debounce function is the same as `debounce` except that it can be used to\ndeal with typescript collection and typescript collections."},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"d5085175-30ef-4be8-8e37-f4b73c0fc03a","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"320ba791-2109-4551-8d6e-a1e83b925aea"},"type":"DESCRIPTION","text":"Delays invoking a provided function at least since specified milliseconds have elapsed. From The Pieces TypeScript Collection.\n\n💡 Smart Description: The debounce function is the same as `debounce` except that it can be used to\ndeal with typescript collection and typescript collections."}],"updated":"2024-04-28T22:18:40.855Z"},{"title":"Check if collection elements are true","id":"6787627e-e28f-4072-8db8-101f45f7ebea","type":"CODE","raw":"const all = <T = any>(arr: T[], fn: (t: T) => boolean = Boolean) => arr.every(fn);","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.855Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ccd75fe7-808c-4ad4-bafa-53a8dcd12e8b","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"6787627e-e28f-4072-8db8-101f45f7ebea"},"type":"DESCRIPTION","text":"Returns true if all elements in a collection are true. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.860Z"},{"title":"Check if at least one element passes function","id":"1b12d4a1-0d0d-40aa-8fb9-ec40babcba89","type":"CODE","raw":"const some = <T = any>(arr: T[], fn: (t: T) => boolean = Boolean) => arr.some(fn);","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.855Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"11a302ca-9574-46c1-bbb6-66e95c9a715b","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"1b12d4a1-0d0d-40aa-8fb9-ec40babcba89"},"type":"DESCRIPTION","text":"Tests whether at least one element in the array passes the test implemented by a provided function. From The Pieces TypeScript Collection.\n\n💡 Smart Description: This code relates to typescript, some and pieces typescript collection"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"99005467-b2be-4df6-88ef-57a4864f5373","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"1b12d4a1-0d0d-40aa-8fb9-ec40babcba89"},"type":"DESCRIPTION","text":"This code relates to typescript, some and pieces typescript collection"}],"updated":"2024-04-28T22:18:40.855Z"},{"title":"Remove falsy values","id":"16cd6485-aeda-4be0-80ba-fda136a9f441","type":"CODE","raw":"const compact = (arr: any[]) => arr.filter(Boolean);","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.855Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ca9f3e51-aceb-4eca-9c1b-88b369a34072","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"16cd6485-aeda-4be0-80ba-fda136a9f441"},"type":"DESCRIPTION","text":"This code relates to compact, filter and pieces typescript collection.\n@param {Array} any Array of all elements in the array that should be sorted by their type (typescript/pieces)\n@returns {Function} Returns a function which returns true if each element is empty or false otherwise"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"f1a59665-da66-4ef2-946d-0ae164f3442d","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"16cd6485-aeda-4be0-80ba-fda136a9f441"},"type":"DESCRIPTION","text":"Removes falsy values from an array. From The Pieces TypeScript Collection.\n\n💡 Smart Description: This code relates to compact, filter and pieces typescript collection.\n@param {Array} any Array of all elements in the array that should be sorted by their type (typescript/pieces)\n@returns {Function} Returns a function which returns true if each element is empty or false otherwise"}],"updated":"2024-04-28T22:18:40.855Z"},{"title":"Get Value","id":"4778ed03-b367-417e-9035-fc9a3fdc8015","type":"CODE","raw":"interface MyInterface {\n  id: number;\n  name: string;\n  properties: string[];\n}\n\nconst myObject: MyInterface = {\n  id: 1,\n  name: 'foo',\n  properties: ['a', 'b', 'c']\n};\n\nfunction getValue(value: keyof MyInterface) {\n  return myObject[value];\n}\n\ngetValue('id'); // 1\ngetValue('count')","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.854Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"f9b14653-6a70-4ea9-be81-98da08ca4a3d","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"4778ed03-b367-417e-9035-fc9a3fdc8015"},"type":"DESCRIPTION","text":"Get value of an object with an interface. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.854Z"},{"title":"Store record as a string with interface","id":"369fe4e6-7282-458a-99d1-55ce36078a33","type":"CODE","raw":"const myTypedObject: Record<string, MyInterface> = {\n  first: {...},\n  second: {...},\n  ...\n};","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.854Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4272fc42-8f75-4c9d-a823-f8085ceb76ce","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"369fe4e6-7282-458a-99d1-55ce36078a33"},"type":"DESCRIPTION","text":"Map a string key to a custom interface in an object. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.858Z"},{"title":"Omit properties from interface","id":"c7e81ac7-58ba-4c69-8df8-1f693684f8d7","type":"CODE","raw":"interface MyInterface {\n  id: number;\n  name: string;\n  properties: string[];\n}\n\ntype MyShortType = Omit<MyInterface, 'name' | 'id'>;","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.854Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"a0bc1e21-357e-441b-8d7a-2e0d4a4bfd6b","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"c7e81ac7-58ba-4c69-8df8-1f693684f8d7"},"type":"DESCRIPTION","text":"Exclude properties from a given interface. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.854Z"},{"title":"Pick properties from interface","id":"1054a3cd-0ed5-4d63-9196-e501cc3c28bc","type":"CODE","raw":"interface MyInterface {\n  id: number;\n  name: string;\n  properties: string[];\n}\n\ntype MyShortType = Pick<MyInterface, 'name' | 'id'>;","language":"ts","time":"3 hours ago","created":"2024-04-28T22:18:40.854Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3fb36059-9426-46d6-a2dd-7f32d243a75c","created":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"1054a3cd-0ed5-4d63-9196-e501cc3c28bc"},"type":"DESCRIPTION","text":"Construct a new type based on partial properties of an interface. From The Pieces TypeScript Collection."}],"updated":"2024-04-28T22:18:40.854Z"},{"title":"Delay async","id":"e0e49994-310b-47fa-a6ab-f05083115c97","type":"CODE","raw":"const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.428Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e7e85063-69f9-499c-b101-bc7df4330b59","created":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"e0e49994-310b-47fa-a6ab-f05083115c97"},"type":"DESCRIPTION","text":"Delays the execution of an asynchronous function by putting it into sleep. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.453Z"},{"title":"Add multiple classes","id":"d0d36b57-a3c4-4ab0-acc2-fa3d5de4b007","type":"CODE","raw":"element.classList.add(\"active\", \"highlighted\");","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.428Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3762c6b3-de26-46f5-b92f-585cd74f344d","created":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"d0d36b57-a3c4-4ab0-acc2-fa3d5de4b007"},"type":"DESCRIPTION","text":"Adds multiple classes to the selected element. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.441Z"},{"title":"Check valid JSON","id":"8c572af9-b9c1-49e5-9f10-caf24cd08c58","type":"CODE","raw":"const isValidJSON = str => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n\n\treturn true;\n};","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.428Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"11a58eae-06a2-467c-aff5-c6bbbd215ae6","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"8c572af9-b9c1-49e5-9f10-caf24cd08c58"},"type":"DESCRIPTION","text":"Returns true if the given string is valid JSON.\n@param {String} str - String to be parsed"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"c8aeb471-d677-45d7-b26a-320fe6861ba0","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"8c572af9-b9c1-49e5-9f10-caf24cd08c58"},"type":"DESCRIPTION","text":"Checks whether a string is valid JSON. From The Pieces JavaScript Collection.\n\n💡 Smart Description: Returns true if the given string is valid JSON.\n@param {String} str - String to be parsed"}],"updated":"2024-04-28T22:18:30.442Z"},{"title":"Aggregating results from multiple promises","id":"54eaedb9-66eb-40e5-be3d-a9a9e837ef4f","type":"CODE","raw":"Promise.all([ promise_1, promise_2 ]).then((values) => {\n    // all input Promises resolved\n}).catch((reason) => {\n    // one of input Promises rejected\n});","language":"js","time":"44 minutes ago","created":"2024-04-28T22:18:30.428Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"173fe292-fe9b-4cc4-84cb-05b81f4749af","created":{"value":"2024-04-28T22:18:30.242Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"54eaedb9-66eb-40e5-be3d-a9a9e837ef4f"},"type":"DESCRIPTION","text":"Takes an array of promises as an input and gets resolved when all the promises get resolved or any of them gets rejected. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.431Z"},{"title":"Array to HTML list","id":"d361b93f-39b1-486d-9850-37999de73973","type":"CODE","raw":"const arrayToHTMLList = (arr, listID) =>\n  document.querySelector(`#${listID}`).innerHTML += arr\n    .map(item => `<li>${item}</li>`)\n    .join('');","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3f4a364b-d1ac-4f8b-afc7-ce6e83a6bf91","created":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"d361b93f-39b1-486d-9850-37999de73973"},"type":"DESCRIPTION","text":"Converts the given array elements into <li> tags and appends them to the list of the given id. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.446Z"},{"title":"Get current time","id":"2f8561f5-b84a-47de-85fb-153435c90801","type":"CODE","raw":"const date = new Date()\nconst currentTime = \n   `${date.getHours()}:${date.getMintues()}:${date.getSeconds()}`","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"32b0d0a7-4c9b-492c-8d0a-23cf3ce35e73","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"2f8561f5-b84a-47de-85fb-153435c90801"},"type":"DESCRIPTION","text":"Get current date and time. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.454Z"},{"title":"Flatten","id":"c8c32387-ba6f-43b6-96f1-9d7772510f7d","type":"CODE","raw":"const flatten = arr => arr.flat(Infinity);","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"421da50a-5975-458f-b2cd-488b98e0b620","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"c8c32387-ba6f-43b6-96f1-9d7772510f7d"},"type":"DESCRIPTION","text":"Flattens a deeply nested array up until the specified depth. From The Pieces JavaScript Collection.\n\n💡 Smart Description: This code relates to JavaScript, pieces javascript collection\n@param {Array} [arr] The array of items that should be flattened"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"5d981e50-556b-454d-9d6f-652d697f9b58","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"c8c32387-ba6f-43b6-96f1-9d7772510f7d"},"type":"DESCRIPTION","text":"This code relates to JavaScript, pieces javascript collection\n@param {Array} [arr] The array of items that should be flattened"}],"updated":"2024-04-28T22:18:30.455Z"},{"title":"Remove HTML tags","id":"14f0dff7-312d-45df-b411-e5de9630aee6","type":"CODE","raw":"const strippedString = originalString.replace(/(<([^>]+)>)/gi, \"\");","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"1b98b91c-4081-4961-9599-601a1af10c80","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"14f0dff7-312d-45df-b411-e5de9630aee6"},"type":"DESCRIPTION","text":"Remove html tags from strings From The Pieces JavaScript Collection.\n\n💡 Smart Description: Returns the original string of a pieces javascript collection, html and js.\n@return String"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3c25b9f8-3b35-4545-b3e7-35ec849a1b6a","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"14f0dff7-312d-45df-b411-e5de9630aee6"},"type":"DESCRIPTION","text":"Returns the original string of a pieces javascript collection, html and js.\n@return String"}],"updated":"2024-04-28T22:18:30.448Z"},{"title":"Intersection","id":"2d3ae4fc-f64e-4310-b00b-dd8d1623eebb","type":"CODE","raw":"const intersection = (a, b) => {\n  const s = new Set(b);\n\n  return a.filter(x => s.has(x));\n};","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"023edd10-0526-47a6-99f8-a57db6dec96a","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"2d3ae4fc-f64e-4310-b00b-dd8d1623eebb"},"type":"DESCRIPTION","text":"Gets an array with elements that are included in two other arrays. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.445Z"},{"title":"Get URL path","id":"fc2c4a35-b5fc-4c0c-8d1d-bd8514b1397d","type":"CODE","raw":"const newURL = `${window.location.protocol}//${window.location.host}/${window.location.pathname}${window.location.search}`","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"0f938187-66a2-4a8e-ad39-13b857507522","created":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"fc2c4a35-b5fc-4c0c-8d1d-bd8514b1397d"},"type":"DESCRIPTION","text":"Gets the url path for a webpage using javascript. From The Pieces JavaScript Collection.\n\n💡 Smart Description: This code relates to url and pieces javascript collection\n@return new URL"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"54eb8f96-9bc3-4f35-bb97-e929ece4f54a","created":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"3 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"fc2c4a35-b5fc-4c0c-8d1d-bd8514b1397d"},"type":"DESCRIPTION","text":"This code relates to url and pieces javascript collection\n@return new URL"}],"updated":"2024-04-28T22:18:30.444Z"},{"title":"Find key","id":"67e42f32-61a5-4318-88ea-370cf2854961","type":"CODE","raw":"const findKey = (obj, fn) => Object.keys(obj).find(key => fn(obj[key], key, obj));","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3bc0ac9d-8247-474e-861f-a6267104f837","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"67e42f32-61a5-4318-88ea-370cf2854961"},"type":"DESCRIPTION","text":"Returns the first key that satisfies a given function. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.451Z"},{"title":"Has class","id":"5983bb93-4755-4a58-b3d5-883900123663","type":"CODE","raw":"const hasClass = (el, className) => el.classList.contains(className);","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.427Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"a51af5b8-ea32-4b39-b365-e94cbadd5130","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"5983bb93-4755-4a58-b3d5-883900123663"},"type":"DESCRIPTION","text":"Checks whether an element has a particular class. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.440Z"},{"title":"Removes Duplicates from an Array","id":"b4a96255-3ef4-4c87-9894-285365347cc9","type":"CODE","raw":"const unique = [...new Set(array)];","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.426Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"958dae79-0a9a-48ba-a606-c98f7c4002ab","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"b4a96255-3ef4-4c87-9894-285365347cc9"},"type":"DESCRIPTION","text":"Remove duplicates from an array using a Set. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.434Z"},{"title":"Count occurrences","id":"7ba19e06-9319-4d1e-8e65-4f812c4de283","type":"CODE","raw":"const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.426Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"a8505d0e-e347-42be-8fbc-f920a36777d1","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"7ba19e06-9319-4d1e-8e65-4f812c4de283"},"type":"DESCRIPTION","text":"Count the occurences of a value in an array. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.433Z"},{"title":"Difference","id":"677a1288-aab2-4f4e-9a07-793646c74e25","type":"CODE","raw":"const difference = (a, b) => {\n  const s = new Set(b);\n  return a.filter(x => !s.has(x));\n};\n\ndifference([1, 2, 3], [1, 2, 4]); // [3]","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.426Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"23f79979-0504-48de-a4c9-1f1c43746b61","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"677a1288-aab2-4f4e-9a07-793646c74e25"},"type":"DESCRIPTION","text":"Finds the difference between two arrays. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.430Z"},{"title":"Defer","id":"facd47d3-0a10-486e-bf89-e671128da073","type":"CODE","raw":"const defer = (fn, ...args) => setTimeout(fn, 1, ...args);\n\ndefer(console.log, 'a'), console.log('b'); // logs 'b' then 'a'","language":"js","time":"44 minutes ago","created":"2024-04-28T22:18:30.426Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"17f37c81-1d6c-4732-9a28-9de0ab07f851","created":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"mechanism":"AUTOMATIC","asset":{"id":"facd47d3-0a10-486e-bf89-e671128da073"},"type":"DESCRIPTION","text":"This code relates to javascript, defer and pieces javascript collection\n@param {Function} fn The function that will be called when the callback is executed"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ae96b30c-e114-4618-adb2-11c36baa4695","created":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"facd47d3-0a10-486e-bf89-e671128da073"},"type":"DESCRIPTION","text":"Delays execution of function until the current call stack is cleared. From The Pieces JavaScript Collection.\n\n💡 Smart Description: This code relates to javascript, defer and pieces javascript collection\n@param {Function} fn The function that will be called when the callback is executed"}],"updated":"2024-04-28T22:18:30.449Z"},{"title":"Create a promise","id":"64def31e-1056-4eba-a63d-1ff772f5a69e","type":"CODE","raw":"new Promise((resolve, reject) => {\n  // asynchronous operation\n\n  // then in case of success\n  resolve();\n  // or\n  reject(\"failure reason\");\n});","language":"js","time":"3 hours ago","created":"2024-04-28T22:18:30.425Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"19553df4-49ad-445a-8971-95da01f5bffe","created":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"3 hours ago"},"mechanism":"MANUAL","asset":{"id":"64def31e-1056-4eba-a63d-1ff772f5a69e"},"type":"DESCRIPTION","text":"Create a Promise to handle asynchronous events. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.450Z"},{"title":"Stream","id":"fc0d71aa-e96b-47b6-b28d-3d9f6c02d4c1","type":"CODE","raw":"def processor(reader, converter, writer):\n    while True:\n        data = reader.read()\n        if not data:\n            break\n        data = converter(data)\n        writer.write(data)\n\n\nclass Processor:\n    def __init__(self, reader, writer):\n        self.reader = reader\n        self.writer = writer\n\n    def process(self):\n        while True:\n            data = self.reader.readline()\n            if not data:\n                break\n            data = self.converter(data)\n            self.writer.write(data)\n\n    def converter(data):\n        assert False, 'converter must be defined'","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e843abe1-b24b-44a3-97a3-3320b09592b2","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"fc0d71aa-e96b-47b6-b28d-3d9f6c02d4c1"},"type":"DESCRIPTION","text":"Creates a stream. From The Pieces Python Collection."}],"updated":"2024-04-23T07:26:05.598Z"},{"title":"Set up a virtual environment","id":"e38193a0-b418-45aa-b1b1-482e55319600","type":"CODE","raw":"python -m venv projectnamevenv","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"abc3b55c-c669-4b6d-86be-6f64a09fd5ea","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"e38193a0-b418-45aa-b1b1-482e55319600"},"type":"DESCRIPTION","text":"This code relates to Python, virtual environment and pieces python collection."},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e0c00c68-d197-4fd8-845c-d8fe0c46f402","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"e38193a0-b418-45aa-b1b1-482e55319600"},"type":"DESCRIPTION","text":"Create a virtual environment in Python to manage dependencies. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to Python, virtual environment and pieces python collection."}],"updated":"2024-04-23T07:26:05.598Z"},{"title":"Read JSON data from a file","id":"df59cd23-a4be-4ae2-b015-bde52bbacd5d","type":"CODE","raw":"import json\n\ndef read_json_from_file(filepath):\n\twith open(filepath, \"r\") as f:\n    data = json.load(f)","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"98dfd3bf-0ae6-4f1c-8b47-4518d48cee10","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"df59cd23-a4be-4ae2-b015-bde52bbacd5d"},"type":"DESCRIPTION","text":"This code relates to pieces python collection, json, json read and python\nimport json"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"c843d0bb-0525-4b1f-96fc-45df6b2c3330","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"df59cd23-a4be-4ae2-b015-bde52bbacd5d"},"type":"DESCRIPTION","text":"Read JSON data from a file From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to pieces python collection, json, json read and python\nimport json"}],"updated":"2024-04-23T07:26:05.597Z"},{"title":"List Comprehension with Conditionals","id":"149268c2-d467-4671-ad4e-fafd24b988bc","type":"CODE","raw":"l = [-1, 3, -4, 5, 6, -9]\nl = [x if x >= 0 else 0 for x in l]","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7373a2a5-0b4e-4fef-9b49-94f01a1adfcf","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"149268c2-d467-4671-ad4e-fafd24b988bc"},"type":"DESCRIPTION","text":"Perform different operations in a list comprehension depending on a conditional. From The Pieces Python Collection.\n\n💡 Smart Description: /*\nThis code relates to list comprehension, pieces python collection, python and list"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7f8322ee-1821-432f-a770-fe8671520f3d","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"149268c2-d467-4671-ad4e-fafd24b988bc"},"type":"DESCRIPTION","text":"/*\nThis code relates to list comprehension, pieces python collection, python and list"}],"updated":"2024-04-23T07:26:05.594Z"},{"title":"Write JSON data to file","id":"aef4c5b5-0edc-4389-9a40-43cfd6e6e8df","type":"CODE","raw":"import json\n\ndef write_json_to_file(data, filepath):\n\twith open(filename, \"w\") as f:\n\t\tjson.dump(data, f, indent=4)","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"12bd341e-b9b0-46b7-8810-38a9b686c6f5","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"aef4c5b5-0edc-4389-9a40-43cfd6e6e8df"},"type":"DESCRIPTION","text":"This code relates to python, json, pieces python collection and json write\nimport json"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4b63bef8-c96b-4542-b924-e58ca9dcb151","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"aef4c5b5-0edc-4389-9a40-43cfd6e6e8df"},"type":"DESCRIPTION","text":"Write JSON data to a file. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to python, json, pieces python collection and json write\nimport json"}],"updated":"2024-04-23T07:26:05.592Z"},{"title":"Logging","id":"3919456d-0cb7-446a-99d4-892331c4920b","type":"CODE","raw":"import logging\n\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.DEBUG)\n\nformatter = logging.Formatter('%(asctime)s:%(name)s:%(message)s')\n\nfile_handler = logging.FileHandler('sample.log')\nfile_handler.setLevel(logging.ERROR)\nfile_handler.setFormatter(formatter)\n\nstream_handler = logging.StreamHandler()\nstream_handler.setFormatter(formatter)\n\nlogger.addHandler(file_handler)\nlogger.addHandler(stream_handler)","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ef739714-17f0-4afe-950c-017a3af3137f","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"3919456d-0cb7-446a-99d4-892331c4920b"},"type":"DESCRIPTION","text":"Set logging for debug level along with file name and output to a `sample.log` file. From The Pieces Python Collection."}],"updated":"2024-04-23T07:26:05.589Z"},{"title":"Singleton decorator","id":"8957a816-9f4f-4ce0-956a-eaac44e9edf4","type":"CODE","raw":"def singleton(myClass):\n\tinstances = {}\n\tdef getInstance(*args, **kwargs):\n\t\tif myClass not in instances:\n\t\t\tinstances[myClass] = myClass(*args, **kwargs)\n\t\treturn instances[myClass]\n\treturn getInstance\n\n@singleton\nclass TestClass(object):\n\tpass","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"11b2b104-631e-42f4-bc38-15677ce0b4e3","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"8957a816-9f4f-4ce0-956a-eaac44e9edf4"},"type":"DESCRIPTION","text":"Decorator to create a singleton class. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to python, virtual environment and pieces python collection\ndef singleton(myClass):"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"68039115-c6f1-4485-a154-d120255c76cb","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"8957a816-9f4f-4ce0-956a-eaac44e9edf4"},"type":"DESCRIPTION","text":"This code relates to python, virtual environment and pieces python collection\ndef singleton(myClass):"}],"updated":"2024-04-23T07:26:05.586Z"},{"title":"Thread Pool","id":"4b540156-baa9-4421-bd5c-4d184cb5ed2c","type":"CODE","raw":"import threading\nimport time\nfrom queue import Queue\n\n\ndef f(n):\n    time.sleep(n)\n\n\nclass Worker(threading.Thread):\n    def __init__(self, queue):\n        super(Worker, self).__init__()\n        self.q = queue\n        self.daemon = True\n        self.start()\n\n    def run(self):\n        while 1:\n            f, args, kwargs = self.q.get()\n            try:\n                f(*args, **kwargs)\n            except Exception as e:\n                print(e)\n            self.q.task_done()\n\n\nclass ThreadPool(object):\n    def __init__(self, thread_num=10):\n        self.q = Queue(thread_num)\n        for i in range(thread_num):\n            Worker(self.q)\n\n    def add_task(self, f, *args, **kwargs):\n        self.q.put((f, args, kwargs))\n\n    def wait_complete(self):\n        self.q.join()\n\n\nif __name__ == '__main__':\n    start = time.time()\n    pool = ThreadPool(5)\n    for i in range(10):\n        pool.add_task(f, 3)\n    pool.wait_complete()\n    end = time.time()","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"066d3224-e6f3-4093-a879-b06570ed2b32","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"4b540156-baa9-4421-bd5c-4d184cb5ed2c"},"type":"DESCRIPTION","text":"Creates a thread pool. From The Pieces Python Collection."}],"updated":"2024-04-23T07:26:05.578Z"},{"title":"Make an ABC Class","id":"64875623-3f65-4031-9f1f-b76bf9734cdb","type":"CODE","raw":"from abc import ABCMeta, abstractmethod\n\n\nclass BaseClass(metaclass=ABCMeta):\n    @abstractmethod\n    def foo(self):\n        pass\n\n    @abstractmethod\n    def bar(self):\n        pass\n\n\nclass ConcreteClass(BaseClass):\n    def foo(self):\n        pass\n\n    def bar(self):\n        pass\n\n\ninstance = ConcreteClass()","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.574Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b4ae8387-cb19-4ac4-9fbb-60daea9ff014","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"64875623-3f65-4031-9f1f-b76bf9734cdb"},"type":"DESCRIPTION","text":"Creates an abstract base class to test if objects adhere to given specifications. From The Pieces Python Collection."}],"updated":"2024-04-23T07:26:05.591Z"},{"title":"Check if a file exists","id":"8a216a29-c207-41f2-98f1-8f94723af15e","type":"CODE","raw":"from os import path\n\ndef check_for_file(file_name):\n\tprint(\"File exists: \", path.exists(file_name))","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"85ba069a-23a3-4803-97ee-ff30d704b929","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"8a216a29-c207-41f2-98f1-8f94723af15e"},"type":"DESCRIPTION","text":"Check if a file exists in pieces python collection, file and python\nfrom os import path"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"8e35ef57-ff29-4fa4-8ad9-151c3e767d6b","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"8a216a29-c207-41f2-98f1-8f94723af15e"},"type":"DESCRIPTION","text":"Checks if a file exists or not. From The Pieces Python Collection.\n\n💡 Smart Description: Check if a file exists in pieces python collection, file and python\nfrom os import path"}],"updated":"2024-04-29T00:48:37.217Z"},{"title":"Memory usage","id":"7cf57544-0fb1-4d62-b28b-6dcc4530d555","type":"CODE","raw":"import sys\n\na = 100;\nprint(sys.getsizeof(a))","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"15fced05-4d54-44ed-a13b-6dc9eccb0c6e","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"7cf57544-0fb1-4d62-b28b-6dcc4530d555"},"type":"DESCRIPTION","text":"Checks the total memory an object consumes. From The Pieces Python Collection."}],"updated":"2024-04-23T07:26:05.595Z"},{"title":"Remove falsy","id":"08ce6d67-9555-45ef-a45f-ab4b319654a7","type":"CODE","raw":"def remove_falsy(unfiltered_list):\n    return list(filter(bool, unfiltered_list))","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"6569b264-87c9-468f-89ea-b7e085d1feaf","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"08ce6d67-9555-45ef-a45f-ab4b319654a7"},"type":"DESCRIPTION","text":"This code relates to python, pieces python collection, list and remove falsy"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"d3b97ac1-92d5-4a5c-9a80-53607748fef5","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"08ce6d67-9555-45ef-a45f-ab4b319654a7"},"type":"DESCRIPTION","text":"Removes falsy values from a list by using the filter function. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to python, pieces python collection, list and remove falsy"}],"updated":"2024-04-23T07:26:05.587Z"},{"title":"Merge Any Numbers of lists into lists of lists","id":"64ed016f-a1dd-41da-b3fc-5919b5753b4d","type":"CODE","raw":"def merge(*args, missing_val = None):\n  max_length = max([len(lst) for lst in args])\n  out_list = []\n\n  for i in range(max_length):\n    out_list.append([args[k][i] if i < len(args[k]) else missing_val for k in range(len(args))])\n\n  return out_list","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e1e66798-245f-44ef-9ea7-f7f8dbe2f6d2","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"64ed016f-a1dd-41da-b3fc-5919b5753b4d"},"type":"DESCRIPTION","text":"Merge a series of lists into a list of lists. For example, [1, 2, 3] and [4, 5, 6] would merge into [[1, 2, 3], [4, 5, 6]]. From The Pieces Python Collection."}],"updated":"2024-04-23T07:26:05.590Z"},{"title":"Check for duplicates","id":"59fc70e3-3e42-4fbe-b80e-340379076013","type":"CODE","raw":"def check_for_duplicates(input):\n    return len(input) != len(set(input))","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"245d20ac-6acc-4e46-9dc3-c1822151760d","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"59fc70e3-3e42-4fbe-b80e-340379076013"},"type":"DESCRIPTION","text":"Checks whether a list has duplicate values by using set to grab only unique elements. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to python, check duplicates, pieces python collection and list"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7c86f1dc-227e-410a-a3b4-8760ed47c499","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"59fc70e3-3e42-4fbe-b80e-340379076013"},"type":"DESCRIPTION","text":"This code relates to python, check duplicates, pieces python collection and list"}],"updated":"2024-04-23T07:26:05.587Z"},{"title":"Flatten","id":"f9263fc7-0253-4ba8-9777-86a007b569c8","type":"CODE","raw":"def flatten_list(nested_list):\n    if not(bool(nested_list)):\n        return nestedList\n \n    if isinstance(nested_list[0], list):\n        return flatten_list(*nested_list[:1]) + flatten_list(nested_list[1:])\n \n    return nested_list[:1] + flatten_list(nested_list[1:])","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"38e5f4ba-0378-4efb-a4f2-de48b6a35267","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"f9263fc7-0253-4ba8-9777-86a007b569c8"},"type":"DESCRIPTION","text":"This code relates to recursion, python, list, flatten and pieces python collection"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"d75c0ab8-347b-4e9d-bc65-b834e62b8ee2","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"f9263fc7-0253-4ba8-9777-86a007b569c8"},"type":"DESCRIPTION","text":"Flattens a nested list using recursion. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to recursion, python, list, flatten and pieces python collection"}],"updated":"2024-04-23T07:26:05.585Z"},{"title":"Sort a list of dictionaries","id":"1119de67-35be-4667-b1f1-f230966c3b9f","type":"CODE","raw":"new_dict = {k: v for k, v in sorted(d.items(), key=lambda item: item[1])}","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"6d879115-9dc8-4aa3-bf0f-839677516d9c","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"1119de67-35be-4667-b1f1-f230966c3b9f"},"type":"DESCRIPTION","text":"Sort a list of dictionaries From The Pieces Python Collection.\n\n💡 Smart Description: Creates a new dictionary with the given keys and values.\n@param d The list of items to be created"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e9b955ba-afef-4ab7-880b-1ab648c842af","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"1119de67-35be-4667-b1f1-f230966c3b9f"},"type":"DESCRIPTION","text":"Creates a new dictionary with the given keys and values.\n@param d The list of items to be created"}],"updated":"2024-04-23T07:26:05.583Z"},{"title":"Merge any number of dictionaries","id":"cf8a7ca4-e006-4af7-a0ca-7c53616b0240","type":"CODE","raw":"def merge_dicts(*dicts):\n  super_dict = {}\n  for dict in dicts:\n      for k, v in dict.items():\n          super_dict[k] = v\n\n return super_dict","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"37a436a9-b6e9-467f-8047-e63071c905bb","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"cf8a7ca4-e006-4af7-a0ca-7c53616b0240"},"type":"DESCRIPTION","text":"This code relates to dictionary, python, pieces python collection and merge dictionary\ndef merge_dicts(dict)"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e35b0e8a-d0dc-4e95-9f0d-a02316f7f5d6","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"cf8a7ca4-e006-4af7-a0ca-7c53616b0240"},"type":"DESCRIPTION","text":"Merge multiple dictionaries into one. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to dictionary, python, pieces python collection and merge dictionary\ndef merge_dicts(dict)"}],"updated":"2024-04-23T07:26:05.596Z"},{"title":"Parse data from a CSV","id":"35bbfb5f-e789-4f9a-9c82-de63d17e497d","type":"CODE","raw":"import csv\n\ndef parse_csv_data(csv_path):\n\tcsv_mapping_list = []\n\n\twith open(csv_path) as my_data:\n\t    csv_reader = csv.reader(my_data, delimiter=\",\")\n\t    line_count = 0\n\t    for line in csv_reader:\n\t        if line_count == 0:\n\t            header = line\n\t        else:\n\t            row_dict = {key: value for key, value in zip(header, line)}\n\t            csv_mapping_list.append(row_dict)\n\t        line_count += 1","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"585c41c3-d879-4cac-b673-d990bc99863b","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"35bbfb5f-e789-4f9a-9c82-de63d17e497d"},"type":"DESCRIPTION","text":"This code relates to csv, python, python-3.x and pieces python collection\nimport csv"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"9035fcd2-e456-4213-a3e2-0138e40ca3f5","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"35bbfb5f-e789-4f9a-9c82-de63d17e497d"},"type":"DESCRIPTION","text":"Parse CSV data and store it in a list of dictionaries. From The Pieces Python Collection.\n\n💡 Smart Description: This code relates to csv, python, python-3.x and pieces python collection\nimport csv"}],"updated":"2024-04-23T07:26:05.576Z"},{"title":"Setting Document Class, Font Size, and Page Layout in LaTeX","id":"42e2c655-2fb1-4497-84a7-688ed22ab10c","type":"CODE","raw":"% --- Set document class and font size ---\r\n\r\n\\documentclass[letterpaper, 11pt]{article}\r\n\r\n% --- Package imports ---\r\n\r\n\\usepackage{\r\n  amsmath, amsthm, amssymb, mathtools, dsfont, amsfonts,\t    % Math typesetting\r\n  newtxtext, newtxmath, nccmath, siunitx,            % Text and math fonts\r\n  graphicx, wrapfig, subfig, float, pgfplots, tcolorbox,      % Figures and graphics formatting\r\n  listings, color, inconsolata, pythonhighlight,              % Code formatting\r\n  fancyhdr, sectsty, hyperref, enumerate, enumitem, titling, epigraph,\r\n  standalone} % Title, headers/footers, section fonts, links, lists\r\n\r\n\r\n% --- Page layout settings ---\r\n\r\n% Set page margins\r\n\\usepackage[left=1.35in, right=1.35in, bottom=1in, top=1.1in, headsep=0.2in]{geometry}\r\n\r\n% Anchor footnotes to the bottom of the page\r\n\\usepackage[bottom]{footmisc}\r\n\r\n% Set line spacing\r\n\\renewcommand{\\baselinestretch}{1.2}\r\n\r\n% Set spacing between paragraphs\r\n\\setlength{\\parskip}{1.5mm}\r\n\r\n% Allow multi-line equations to break onto the next page\r\n\\allowdisplaybreaks\r\n\r\n% Enumerated lists: make numbers flush left, with parentheses around them\r\n\\setlist[enumerate]{wide=0pt, leftmargin=21pt, labelwidth=0pt, align=left}\r\n\\setenumerate[1]{label={(\\arabic*)}}\r\n\r\n% --- Page formatting settings ---\r\n\r\n% Set link colours for labeled items (blue) and citations (red)\r\n\\hypersetup{colorlinks=true, linkcolor=blue, citecolor=red}\r\n\r\n% Make reference section title font smaller\r\n\\renewcommand{\\refname}{\\large\\bf{References}}\r\n\r\n% --- Settings for printing computer code ---\r\n\r\n% Define colors for green text (comments), grey text (line numbers),\r\n% and green frame around code\r\n\\definecolor{greenText}{rgb}{0.5, 0.7, 0.5}\r\n\\definecolor{greyText}{rgb}{0.5, 0.5, 0.5}\r\n\\definecolor{codeFrame}{rgb}{0.5, 0.7, 0.5}\r\n\r\n% Define code settings\r\n\\lstdefinestyle{code} {\r\n  frame=single, rulecolor=\\color{codeFrame},            % Include a green frame around the code\r\n  numbers=left,                                         % Include line numbers\r\n  numbersep=8pt,                                        % Add space between line numbers and frame\r\n  numberstyle=\\tiny\\color{greyText},                    % Line number font size (tiny) and color (grey)\r\n  commentstyle=\\color{greenText},                       % Put comments in green text\r\n  basicstyle=\\linespread{1.1}\\ttfamily\\footnotesize,    % Set code line spacing\r\n  keywordstyle=\\ttfamily\\footnotesize,                  % No special formatting for keywords\r\n  showstringspaces=false,                               % No marks for spaces\r\n  xleftmargin=1.95em,                                   % Align code frame with main text\r\n  framexleftmargin=1.6em,                               % Extend frame left margin to include line numbers\r\n  breaklines=true,                                      % Wrap long lines of code\r\n  postbreak=\\mbox{\\textcolor{greenText}{$\\hookrightarrow$}\\space} % Mark wrapped lines with an arrow\r\n}\r\n\r\n% Define mainbox (tcolorbox) settings\r\n\\tcbset {\r\n  base/.style={\r\n    arc=0mm, \r\n    bottomtitle=0.5mm,\r\n    boxrule=0mm,\r\n    colbacktitle=black!10!white, \r\n    coltitle=black, \r\n    fonttitle=\\bfseries, \r\n    left=2.5mm,\r\n    leftrule=1mm,\r\n    right=3.5mm,\r\n    title={#1},\r\n    toptitle=0.75mm, \r\n  }\r\n}\r\n\r\n% Define Colours through RGB\r\n\r\n\\definecolor{brandblue}{rgb}{0.34, 0.7, 1}\r\n\\definecolor{lightpurple}{rgb}{0.7, 0.7, 1}\r\n\r\n% --- Define various colorbox settings ---%\r\n\r\n% Mainbox\r\n\r\n\\newtcolorbox{mainbox}[1]{\r\n  colframe=brandblue, \r\n  base={#1}\r\n}\r\n\r\n% Subbox\r\n\r\n\\newtcolorbox{subbox}[1]{\r\n  colframe=lightpurple,\r\n  base={#1}\r\n}\r\n\r\n% Theorem box\r\n\\newtcolorbox{theobox}[1]{\r\n  colframe=greenText,\r\n  base={#1}\r\n}\r\n\r\n% Conclusion box\r\n\\newtcolorbox{conbox}[1]{\r\n  colframe=red,\r\n  base={#1}\r\n}\r\n\r\n\r\n\\newtcolorbox{asumbox}[1]{\r\n  colframe=definitionorange,\r\n  base={#1}\r\n}\r\n\r\n\\newtcolorbox[auto counter,number within=section,\r\ncrefname={theorembox}{theoboxes}]%\r\n{theorembox}[2][]{\r\ncolframe=theoremteal,\r\nbase={#1},\r\nfonttitle=\\bfseries,\r\ntitle=Theorem \\thetcbcounter: #2,#1}\r\n\r\n\r\n\r\n% Set all code listings to be styled with the above settings\r\n\\lstset{style=code}\r\n\r\n% --- Math/Statistics commands ---\r\n\r\n% Add a reference number to a single line of a multi-line equation\r\n% Usage: \"\\numberthis\\label{labelNameHere}\" in an align or gather environment\r\n\\newcommand\\numberthis{\\addtocounter{equation}{1}\\tag{\\theequation}}\r\n\r\n% Shortcut for bold text in math mode, e.g. $\\b{X}$\r\n\\let\\b\\mathbf\r\n\r\n% Shortcut for bold Greek letters, e.g. $\\bg{\\beta}$\r\n\\let\\bg\\boldsymbol\r\n\r\n% Shortcut for calligraphic script, e.g. %\\mc{M}$\r\n\\let\\mc\\mathcal\r\n\r\n% \\mathscr{(letter here)} is sometimes used to denote vector spaces\r\n\\usepackage[mathscr]{euscript}\r\n\r\n% Convergence: right arrow with optional text on top\r\n% E.g. $\\converge[w]$ for weak convergence\r\n\\newcommand{\\converge}[1][]{\\xrightarrow{#1}}\r\n\r\n% Normal distribution: arguments are the mean and variance\r\n% E.g. $\\normal{\\mu}{\\sigma}$\r\n\\newcommand{\\normal}[2]{\\mathcal{N}\\left(#1,#2\\right)}\r\n\r\n% Uniform distribution: arguments are the left and right endpoints\r\n% E.g. $\\unif{0}{1}$\r\n\\newcommand{\\unif}[2]{\\text{Uniform}(#1,#2)}\r\n\r\n% Independent and identically distributed random variables\r\n% E.g. $ X_1,...,X_n \\iid \\normal{0}{1}$\r\n\\newcommand{\\iid}{\\stackrel{\\smash{\\text{iid}}}{\\sim}}\r\n\r\n% Equality: equals sign with optional text on top\r\n% E.g. $X \\equals[d] Y$ for equality in distribution\r\n\\newcommand{\\equals}[1][]{\\stackrel{\\smash{#1}}{=}}\r\n\r\n% Math mode symbols for common sets and spaces. Example usage: $\\R$\r\n\\newcommand{\\R}{\\mathbb{R}}   % Real numbers\r\n\\newcommand{\\C}{\\mathbb{C}}   % Complex numbers\r\n\\newcommand{\\Q}{\\mathbb{Q}}   % Rational numbers\r\n\\newcommand{\\Z}{\\mathbb{Z}}   % Integers\r\n\\newcommand{\\N}{\\mathbb{N}}   % Natural numbers\r\n\\newcommand{\\F}{\\mathcal{F}}  % Calligraphic F for a sigma algebra\r\n\\newcommand{\\El}{\\mathcal{L}} % Calligraphic L, e.g. for L^p spaces\r\n\r\n% Math mode symbols for probability\r\n\\newcommand{\\pr}{\\mathbb{P}}    % Probability measure\r\n\\newcommand{\\E}{\\mathbb{E}}     % Expectation, e.g. $\\E(X)$\r\n\\newcommand{\\var}{\\text{Var}}   % Variance, e.g. $\\var(X)$\r\n\\newcommand{\\cov}{\\text{Cov}}   % Covariance, e.g. $\\cov(X,Y)$\r\n\\newcommand{\\corr}{\\text{Corr}} % Correlation, e.g. $\\corr(X,Y)$\r\n\\newcommand{\\B}{\\mathcal{B}}    % Borel sigma-algebra\r\n\r\n% Other miscellaneous symbols\r\n\\newcommand{\\tth}{\\text{th}}\t% Non-italicized 'th', e.g. $n^\\tth$\r\n\\newcommand{\\Oh}{\\mathcal{O}}\t% Big-O notation, e.g. $\\O(n)$\r\n\\newcommand{\\1}{\\mathds{1}}\t% Indicator function, e.g. $\\1_A$\r\n\r\n% Additional commands for math mode\r\n\\DeclareMathOperator*{\\argmax}{argmax}    % Argmax, e.g. $\\argmax_{x\\in[0,1]} f(x)$\r\n\\DeclareMathOperator*{\\argmin}{argmin}    % Argmin, e.g. $\\argmin_{x\\in[0,1]} f(x)$\r\n\\DeclareMathOperator*{\\spann}{Span}       % Span, e.g. $\\spann\\{X_1,...,X_n\\}$\r\n\\DeclareMathOperator*{\\bias}{Bias}        % Bias, e.g. $\\bias(\\hat\\theta)$\r\n\\DeclareMathOperator*{\\ran}{ran}          % Range of an operator, e.g. $\\ran(T) \r\n\\DeclareMathOperator*{\\dv}{d\\!}           % Non-italicized 'with respect to', e.g. $\\int f(x) \\dv x$\r\n\\DeclareMathOperator*{\\diag}{diag}        % Diagonal of a matrix, e.g. $\\diag(M)$\r\n\\DeclareMathOperator*{\\trace}{trace}      % Trace of a matrix, e.g. $\\trace(M)$\r\n\r\n% Numbered theorem, lemma, etc. settings - e.g., a definition, lemma, and theorem appearing in that \r\n% order in Section 2 will be numbered Definition 2.1, Lemma 2.2, Theorem 2.3. \r\n% Example usage: \\begin{theorem}[Name of theorem] Theorem statement \\end{theorem}\r\n\\theoremstyle{definition}\r\n\\newtheorem{theorem}{Theorem}[section]\r\n\\newtheorem{proposition}[theorem]{Proposition}\r\n\\newtheorem{lemma}[theorem]{Lemma}\r\n\\newtheorem{corollary}[theorem]{Corollary}\r\n\\newtheorem{definition}[theorem]{Definition}\r\n\\newtheorem{example}[theorem]{Example}\r\n\\newtheorem{remark}[theorem]{Remark}\r\n\r\n% Un-numbered theorem, lemma, etc. settings\r\n% Example usage: \\begin{lemma*}[Name of lemma] Lemma statement \\end{lemma*}\r\n\\newtheorem*{theorem*}{Theorem}\r\n\\newtheorem*{proposition*}{Proposition}\r\n\\newtheorem*{lemma*}{Lemma}\r\n\\newtheorem*{corollary*}{Corollary}\r\n\\newtheorem*{definition*}{Definition}\r\n\\newtheorem*{example*}{Example}\r\n\\newtheorem*{remark*}{Remark}\r\n\\newtheorem*{claim}{Claim}\r\n\r\n\r\n% --- Left/right header text (to appear on every page) ---\r\n\r\n% Include a line underneath the header, no footer line\r\n\\pagestyle{fancy}\r\n\\renewcommand{\\footrulewidth}{0pt}\r\n\\renewcommand{\\headrulewidth}{0.4pt}\r\n\r\n% Left header text: course name/assignment number\r\n\\lhead{MATH2400 -- Assignment 3}\r\n\r\n% Right header text: your name\r\n\\rhead{s4809318 -- Jamie Chen}\r\n\r\n% --- Title and author information ---\r\n\\pretitle{%\r\n  \\begin{center}\r\n    \\LARGE\r\n    \\includegraphics*[width=3cm,height=3cm]{iconupscale.png}\\\\[\\bigskipamount]\r\n}\r\n\\posttitle{\\par\\end{center}\r\n% Epigraph\r\n}\r\n\\title{MATH2400 -- Assignment 3}\r\n\\author{\\textsc{48093189 -- Jamie Chen}}\r\n\\date{\\today}\r\n\r\n\r\n% Add epigraph quote somewhere on title page\r\n\r\n\r\n\r\n\r\n% --- Document starts here ---\r\n\r\n\\begin{document}\r\n\r\n% --- Title ---\r\n\r\n\\maketitle\r\n\\vspace{8cm}\r\n\\epigraph{``Transcendental [numbers], They transcend the power of algebraic methods.''}{--- \\textsc{Leonhard Euler}}\r\n\\newpage\r\n\r\n% --- Content ---\r\n\\subsection*{Theorems and Definitions}\r\n\r\n\\newpage\r\n\r\n\\subsection*{Question 1}\r\n\r\n% --- Bibliography --- %\r\n\r\n% Start a bibliography with two items, a book and a webpage.\r\n% To include a citation, use \"\\cite{book1}\".\r\n\r\n% --- Document ends here ---\r\n\r\n\\end{document}","language":"tex","time":"3 months ago","created":"2024-04-23T07:21:26.016Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b26715bf-8f24-4adb-b262-9321c2d44cfe","created":{"value":"2024-04-23T07:21:26.680Z","readable":"3 months ago"},"updated":{"value":"2024-04-23T07:21:26.680Z","readable":"3 months ago"},"mechanism":"AUTOMATIC","asset":{"id":"42e2c655-2fb1-4497-84a7-688ed22ab10c"},"type":"DESCRIPTION","text":"This code snippet sets the document class and font size for a paragraph. It also includes imports, page layout settings, line spacing, anchor footnotes to the bottom of the page, list sizes, link colours from labeled items (blue),","model":{"id":"581bb95c-a270-412c-ab92-e1a2ee09e812"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"f294f2d2-3646-4003-af6a-340e811e132d","created":{"value":"2024-04-23T07:21:40.369Z","readable":"3 months ago"},"updated":{"value":"2024-04-23T07:21:40.369Z","readable":"3 months ago"},"mechanism":"AUTOMATIC","asset":{"id":"42e2c655-2fb1-4497-84a7-688ed22ab10c"},"type":"DESCRIPTION","text":"This LaTeX code snippet sets the document class, font size, page layout, code formatting, math commands, theorem settings, header text, title page, and bibliography for a document.","model":{"id":"581bb95c-a270-412c-ab92-e1a2ee09e812"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"6307042f-3936-4005-9c93-2d768c2d9c20","created":{"value":"2024-04-23T07:22:25.639Z","readable":"3 months ago"},"updated":{"value":"2024-04-23T07:22:25.639Z","readable":"3 months ago"},"mechanism":"MANUAL","asset":{"id":"42e2c655-2fb1-4497-84a7-688ed22ab10c"},"type":"COMMENT","text":"This code snippet is essential for a developer working on a LaTeX document who needs to customize various formatting aspects such as document class, font size, package imports, page layout settings, code formatting, page formatting settings, and math/statistics commands. By using this snippet, the developer can easily set up the document layout, define colors for text and code, adjust line spacing, set margins, add headers/footers, create color boxes for theorems/conclusions, and define various math symbols and commands. This comprehensive snippet streamlines the process of customizing and formatting a LaTeX document, saving developers time and ensuring consistency in style throughout the document."},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"465828ce-ef7c-4f25-b773-a7dcffe23665","created":{"value":"2024-04-23T07:23:32.616Z","readable":"3 months ago"},"updated":{"value":"2024-04-23T07:23:32.616Z","readable":"3 months ago"},"mechanism":"MANUAL","asset":{"id":"42e2c655-2fb1-4497-84a7-688ed22ab10c"},"type":"COMMENT","text":"Note: This template is still ongoing and is not finished. I am still going to be adding more and more things until I think it can be used for almost every assignment and lectures."}],"updated":"2024-05-08T23:12:04.651Z","share":"https://61e80399-bb56-4b84-9a7a-135812865ff6.pieces.cloud/?p=57ec4ca88a"}],"gptContexts":[],"gptFolderNames":[],"enrichedCode":{},"migration":1,"remoteCopilotState":""}