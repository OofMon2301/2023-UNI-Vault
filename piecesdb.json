{"assets":[{"title":"Is empty","id":"c8754864-e946-4bd1-850d-f323f280c330","type":"CODE","raw":"const isEmpty = (val: any) => val == null || !(Object.keys(val) || val.length;","language":"ts","time":"44 minutes ago","created":"2024-04-28T22:18:40.856Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3652b4aa-dd1b-43f4-b452-52cb823d2832","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"c8754864-e946-4bd1-850d-f323f280c330"},"type":"DESCRIPTION","text":"Checks if a value is an empty object, array, or null. From The Pieces TypeScript Collection.\n\nðŸ’¡ Smart Description: This code relates to typescript, is empty and pieces typescript collection\n@returns {boolean}"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4cf29d14-ebd7-44d0-a406-052cc058220d","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"AUTOMATIC","asset":{"id":"c8754864-e946-4bd1-850d-f323f280c330"},"type":"DESCRIPTION","text":"This code relates to typescript, is empty and pieces typescript collection\n@returns {boolean}"}],"updated":"2024-04-28T22:18:40.856Z"},{"title":"Find key","id":"63262218-dbd9-42e8-8e4c-90ef47ec0b5c","type":"CODE","raw":"const findKey = (obj: any, fn: Function) => Object.keys(obj).find((key) => fn(obj[key], key, obj));","language":"ts","time":"44 minutes ago","created":"2024-04-28T22:18:40.856Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"1937c700-7096-461c-af7b-2a9dd722c1e4","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"AUTOMATIC","asset":{"id":"63262218-dbd9-42e8-8e4c-90ef47ec0b5c"},"type":"DESCRIPTION","text":"This code relates to pieces typescript collection, find key and typescript fn"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3aea288a-811b-496b-be26-7e041a085437","created":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:40.709Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"63262218-dbd9-42e8-8e4c-90ef47ec0b5c"},"type":"DESCRIPTION","text":"Returns the first key that meets a condition specified from passed function. From The Pieces TypeScript Collection.\n\nðŸ’¡ Smart Description: This code relates to pieces typescript collection, find key and typescript fn"}],"updated":"2024-04-28T22:18:40.856Z"},{"title":"Aggregating results from multiple promises","id":"54eaedb9-66eb-40e5-be3d-a9a9e837ef4f","type":"CODE","raw":"Promise.all([ promise_1, promise_2 ]).then((values) => {\n    // all input Promises resolved\n}).catch((reason) => {\n    // one of input Promises rejected\n});","language":"js","time":"44 minutes ago","created":"2024-04-28T22:18:30.428Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"173fe292-fe9b-4cc4-84cb-05b81f4749af","created":{"value":"2024-04-28T22:18:30.242Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:30.242Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"54eaedb9-66eb-40e5-be3d-a9a9e837ef4f"},"type":"DESCRIPTION","text":"Takes an array of promises as an input and gets resolved when all the promises get resolved or any of them gets rejected. From The Pieces JavaScript Collection."}],"updated":"2024-04-28T22:18:30.431Z"},{"title":"Defer","id":"facd47d3-0a10-486e-bf89-e671128da073","type":"CODE","raw":"const defer = (fn, ...args) => setTimeout(fn, 1, ...args);\n\ndefer(console.log, 'a'), console.log('b'); // logs 'b' then 'a'","language":"js","time":"44 minutes ago","created":"2024-04-28T22:18:30.426Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"17f37c81-1d6c-4732-9a28-9de0ab07f851","created":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"mechanism":"AUTOMATIC","asset":{"id":"facd47d3-0a10-486e-bf89-e671128da073"},"type":"DESCRIPTION","text":"This code relates to javascript, defer and pieces javascript collection\n@param {Function} fn The function that will be called when the callback is executed"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ae96b30c-e114-4618-adb2-11c36baa4695","created":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"updated":{"value":"2024-04-28T22:18:30.243Z","readable":"44 minutes ago"},"mechanism":"MANUAL","asset":{"id":"facd47d3-0a10-486e-bf89-e671128da073"},"type":"DESCRIPTION","text":"Delays execution of function until the current call stack is cleared. From The Pieces JavaScript Collection.\n\nðŸ’¡ Smart Description: This code relates to javascript, defer and pieces javascript collection\n@param {Function} fn The function that will be called when the callback is executed"}],"updated":"2024-04-28T22:18:30.449Z"},{"title":"Parse data from a CSV","id":"35bbfb5f-e789-4f9a-9c82-de63d17e497d","type":"CODE","raw":"import csv\n\ndef parse_csv_data(csv_path):\n\tcsv_mapping_list = []\n\n\twith open(csv_path) as my_data:\n\t    csv_reader = csv.reader(my_data, delimiter=\",\")\n\t    line_count = 0\n\t    for line in csv_reader:\n\t        if line_count == 0:\n\t            header = line\n\t        else:\n\t            row_dict = {key: value for key, value in zip(header, line)}\n\t            csv_mapping_list.append(row_dict)\n\t        line_count += 1","language":"py","time":"6 days ago","created":"2024-04-23T07:26:05.573Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"585c41c3-d879-4cac-b673-d990bc99863b","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"35bbfb5f-e789-4f9a-9c82-de63d17e497d"},"type":"DESCRIPTION","text":"This code relates to csv, python, python-3.x and pieces python collection\nimport csv"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"9035fcd2-e456-4213-a3e2-0138e40ca3f5","created":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"updated":{"value":"2024-04-23T07:26:05.422Z","readable":"6 days ago"},"mechanism":"MANUAL","asset":{"id":"35bbfb5f-e789-4f9a-9c82-de63d17e497d"},"type":"DESCRIPTION","text":"Parse CSV data and store it in a list of dictionaries. From The Pieces Python Collection.\n\nðŸ’¡ Smart Description: This code relates to csv, python, python-3.x and pieces python collection\nimport csv"}],"updated":"2024-04-23T07:26:05.576Z"}],"gptContexts":[],"gptFolderNames":[],"enrichedCode":{},"llmModelId":"de647741-ff3c-4d85-b5ec-9c0c16cb6f9f","migration":1,"directives":[]}